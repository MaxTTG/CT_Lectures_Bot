# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å –¢–ì-–±–æ—Ç–æ–º
import telebot

# –†–∞–±–æ—Ç–∞ —Å Google —Å–µ—Ä–≤–∏—Å–∞–º–∏: GoogleDrive –∏ YouTube
import functions
# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –¢–ì-–±–æ—Ç–∞; –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è TinyDB
import database
# –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
import config

# –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞–∑ –≤ –¥–µ–Ω—å
import schedule
import threading
import time

'''
    @name       CT Lectures Bot
    @version    1.0 (10.01.2024)
    @author     Tarazanov Maxim M4139
'''

bot = telebot.TeleBot(config.CT_LECTURES_BOT_TOKEN)


################
# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã #
################

# –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)

    buttonGDYT = telebot.types.KeyboardButton('–°—Å—ã–ª–∫–∏ Google Drive / YouTube')
    markup.add(buttonGDYT)

    database.createUser(message.from_user.id)

    bot.send_message(message.chat.id, config.WELCOME_TEXT, reply_markup=markup, parse_mode='html')


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–ø–∫–∏ –∫—É—Ä—Å–∞
@bot.message_handler(commands=['set'])
def setGD(message: telebot.types.Message):
    newLink = message.text.split('/')[-1]
    try:
        if newLink not in database.getActiveFolders():
            bot.send_message(message.chat.id, '–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–∞–ø–∫—É...\n–ù–∞–ø–∏—à—É –µ—â—ë —Ä–∞–∑, –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–ª—é!')
            database.setUserGD(message.from_user.id, newLink)
        text = '–ü–∞–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    except Exception as e:
        text = '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî\n' \
               '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
    bot.send_message(message.chat.id, text)


# –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É –∫—É—Ä—Å–∞
@bot.message_handler(commands=['open'])
def openGD(message: telebot.types.Message):
    message_text, markup = functions.getGDMessage(functions.links_to_ids([database.getUserGD(message.from_user.id)]))
    bot.send_message(message.chat.id, message_text, reply_markup=markup, parse_mode='html')


# –ü–æ–∏—Å–∫ –Ω–∞ YouTube
@bot.message_handler(commands=['yt'])
def yt(message: telebot.types.Message):
    prompt = message.text.split(maxsplit=1)[1]
    items = functions.searchYT(prompt)
    if items:
        message_text = ''
        for item in items:
            message_text += '–í–∏–¥–µ–æ: ' if item['type'] == 'video' else '–ü–ª–µ–π–ª–∏—Å—Ç: '
            message_text += f'<a href="{item["url"]}">{item["title"]}</a>\n\n'
        bot.send_message(message.chat.id, message_text, parse_mode='html', disable_web_page_preview=True)
    else:
        bot.send_message(message.chat.id, f'–ü–æ –∑–∞–ø—Ä–æ—Å—É "{prompt}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî')


# –í—ã–≤–æ–¥ –ø–æ–º–æ—â–∏
@bot.message_handler(commands=['help', 'h'])
def help_(message: telebot.types.Message):
    bot.send_message(message.chat.id, config.HELP_TEXT, parse_mode='html')


########################################
# –°–æ–æ–±—â–µ–Ω–∏—è –≤ –±–æ—Ç–∞ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ #
########################################

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ –±–æ—Ç–∞
@bot.message_handler()
def parseText(message: telebot.types.Message):
    if message.text == '–°—Å—ã–ª–∫–∏ Google Drive / YouTube':
        text = ''
        link = database.getUserGD(message.from_user.id)
        if link != '':
            text += f'<a href="https://drive.google.com/drive/folders/{link}">Google Drive</a>\n'
        text += f'<a href="{config.CT_LECTURES_YT}">CT Lectures YouTube</a>'
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='html'
        )
    else:
        bot.send_message(message.chat.id, '–ù–µ –∑–Ω–∞—é, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è üòî')


###########################
# –ö–Ω–æ–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ #
###########################
@bot.callback_query_handler(func=lambda cb: True)
def callback(cb: telebot.types.CallbackQuery):
    data = cb.data.split(' ')
    if data[0] == 'gd':
        message_text, markup = functions.getGDMessage(data[1:])
        bot.edit_message_text(message_text, cb.message.chat.id, cb.message.message_id, reply_markup=markup,
                              parse_mode='html')
    else:
        bot.send_message(cb.message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å üòî')


################################
# –†–∞—Å—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ –¥–∏—Å–∫–µ #
################################
def cronBroadcast():
    active_folders = database.getActiveFolders()
    db_folders = database.getDBFolders()
    db_files = database.getDBFiles()

    newfiles = {}

    for folder in active_folders:
        if folder not in db_folders:
            print('–û—à–∏–±–∫–∞: —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞')
            continue
        curfiles = functions.getAllFilesFromGD(folder)
        for file in curfiles:
            if file not in db_files:
                if folder not in newfiles:
                    newfiles[folder] = []
                newfiles[folder].append(file)

    for folder in newfiles.keys():
        users = database.getUsersByFolder(folder)
        for user in users:
            message_text = '–ù–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ Google Drive:\n\n'
            for file in newfiles[folder]:
                database.addFile(folder, file)
                file = file.split('/')[-1]
                message_text += f'<a href="https://drive.google.com/file/d/{file}">{functions.getGDFile(file)}</a>\n\n'
            bot.send_message(user, message_text, parse_mode='html')


##############################
# –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ #
##############################
def runSchedulers(bctime: str = '00:00'):
    # –î–ª—è —Ç–µ—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
    # schedule.every(10).seconds.do(cronBroadcast)

    schedule.every().day.at(bctime).do(cronBroadcast)
    while True:
        schedule.run_pending()
        time.sleep(1)


##########################
# –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –±–æ—Ç–∞ #
##########################
def runBot():
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.createDB()

    # –ó–∞–ø—É—Å–∫ Google –°–µ—Ä–≤–∏—Å–æ–≤
    functions.runGoogleServices()

    # –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot.polling(non_stop=True)


##########
# main() #
##########
if __name__ == '__main__':
    t1 = threading.Thread(target=runBot)
    t2 = threading.Thread(target=runSchedulers)

    t1.start()
    t2.start()
